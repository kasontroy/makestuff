/*

Media Object

The Media Object is an image (or media-type) to the left with (typically) 
descriptive content to the right. The media object can be whatever size it 
wants, the basic format will remain the same. (Text will **not** wrap.)  This 
has any number of applications, such as a checkbox next to a label with lots 
of text.

See: [The Media Object Saves Hundreds of Lines of Code][1]

  [1]: http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/

Markup:
<div class="media-object">
    <figure class="object mtn">
        <img src="http://placehold.it/200" alt="Media Object" />
    </figure>
    <div class="desc">
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas 
        eget risus libero, id venenatis ante. Curabitur iaculis turpis vitae 
        velit luctus in luctus mi molestie. Curabitur bibendum magna lorem. 
        Curabitur enim lectus, scelerisque non pellentesque in, suscipit eget 
        nibh. Pellentesque vitae nunc vel tortor rhoncus euismod. Maecenas 
        pretium porta ultricies. Quisque feugiat sem sit amet sapien consequat 
        non fringilla leo suscipit.</p>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas 
        eget risus libero, id venenatis ante. Curabitur iaculis turpis vitae 
        velit luctus in luctus mi molestie. Curabitur bibendum magna lorem. 
        Curabitur enim lectus, scelerisque non pellentesque in, suscipit eget 
        nibh. Pellentesque vitae nunc vel tortor rhoncus euismod. Maecenas 
        pretium porta ultricies. Quisque feugiat sem sit amet sapien consequat 
        non fringilla leo suscipit.</p>
    </div>
</div>

Styleguide 1.3.1

*/

.media-object {
    &, .desc {
        overflow: hidden;
    }
    &.checkbox-item .object {
        float: left;
        margin-right: @quarter-side;
    }
    .object {
        img {
            display: block;
        }
    }
    .desc {
        display: block;
    }
}

/*

Media Grid

The Media Grid allows you to place a grid of photos or videos (catalog or 
retail products, etc.) without floating them, alleviating the need to concern 
yourself with clearing the floats should an object extend further than another.

The `.object` class is applied to the list item. You then apply grid-system 
classes to the `.object` to constrain the widths.

Markup:
<ul class="unstyled media-grid gm-row gt-row gd-row">
    <li class="gm-columns gm-half gt-columns gt-third gd-columns gd-third object">
        <img src="http://placehold.it/300 alt="Media Object" />
        <p>Here's a subtitle</p>
    </li>
    <li class="gm-columns gm-half gt-columns gt-third gd-columns gd-third object">
        <img src="http://placehold.it/300 alt="Media Object" />
    </li>
    <li class="gm-columns gm-half gt-columns gt-third gd-columns gd-third object">
        <img src="http://placehold.it/300 alt="Media Object" />
    </li>
    <li class="gm-columns gm-half gt-columns gt-third gd-columns gd-third object">
        <img src="http://placehold.it/300 alt="Media Object" />
        <p>Look, I don't catch on the subtitle!</p>
    </li>
</ul>

Styleguide 7.2

*/

.media-grid {
    margin-top: 0;
    padding: 0;
    letter-spacing: -0.31em;
    word-spacing: -0.43em;

    .lte7 & {
        letter-spacing: normal;
    }
    .object {
        list-style: none outside none;
        letter-spacing: normal;
        word-spacing: normal;
        vertical-align: top;

        // Mixins
        .inline-block-fallback();
        .margin-leader();

        img {
            display: block;
        }
        &.gm-columns,
        &.gt-columns,
        &.gd-columns {
            float: none;
        }
    }
}

/*

Nav

The basic `.nav` module simply removes bullets from lists and inlines the list 
items, making the link `inline-block`. The idea is to give the skeleton of a 
horizontal navigation without adding too much style (yet).

Markup:
<ul class="nav">
    <li><a href="#">Nav Item</a></li>
    <li><a href="#">Nav Item</a></li>
    <li><a href="#">Nav Item</a></li>
    <li><a href="#">Nav Item</a></li>
</ul>

Styleguide 1.3.3

*/

.nav {
    padding-left: 0;

    li {
        display: inline;
        list-style: none outside none;
    }
        a {
            .inline-block-fallback();
        }
    &.forceful {
        li {
            display: block;
        }
            a,
            .lte7 & a {
                display: block;
            }
    }
}

/*

Tabs

The tabs module (and accompanying plugin) creates a very basic widget that 
allows embedding and basic styling.

Markup:
<section class="tabs">
    <ul class="forceful nav">
        <li>
            <a class="js-tabs is-current" data-reveal="first-tab" data-reveal-group="tabbed-widget" href="#first-tab">
                First Tab
            </a>
        </li>
        <li>
            <a class="js-tabs" data-reveal="second-tab" data-reveal-group="tabbed-widget" href="#second-tab">
                Second Tab
            </a>
        </li>
        <li>
            <a class="js-tabs" data-reveal="third-tab" data-reveal-group="tabbed-widget" href="#third-tab">
                Third Tab
            </a>
        </li>
        <li>
            <a class="js-tabs" data-reveal="fourth-tab" data-reveal-group="tabbed-widget" href="#fourth-tab">
                Fourth Tab
            </a>
        </li>
    </ul>
    <div class="section">
        <section id="first-tab" class="tab is-current">
            <h3>First Tab</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
        <section id="second-tab" class="tab">
            <h3>Second Tab</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
        <section id="third-tab" class="tab">
            <h3>Third Tab</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
        <section id="fourth-tab" class="tab">
            <h3>Fourth Tab</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
    </div>
</section>

Styleguide 3.2

*/

.js {
    .tabs {
        .section {
            position: relative;
        }
        .tab {
            display: none;

            &.is-current {
                display: block;
            }
        }
    }
}


/*

Pagination

An extension of the basic `.nav` module that simply adds padding enough for 
pagination and makes the module `inline-block` so it can easily be aligned 
(left, center, right).

Markup:
<ol class="pagination nav">
    <li class="first disabled"><a href="#">Previous</a></li>
    <li><a href="#" class="is-current">1</a></li>
    <li><a href="#">2</a></li>
    <li><a href="#">3</a></li>
    <li><a href="#">4</a></li>
    <li><a href="#">5</a></li>
    <li><a href="#">6</a></li>
    <li><a href="#">7</a></li>
    <li><a href="#">8</a></li>
    <li><a href="#">9</a></li>
    <li><a href="#">10</a></li>
    <li class="last"><a href="#">Next</a></li>
</ol>

Styleguide 1.3.5

*/

.pagination {
    display: inline-block;

    li {
        &.disabled a,
        &.disabled a:hover,
        &.disabled a:focus {
            cursor: default;
        }
    }
        a {
            padding: 0 0.625em;
        }
}
