/*

Forms

Styleguide 5.0

*/

/*

Basic Themed Elements

Style `input`s/`textarea`s and set them to `width: 100%` to adapt to the width of their wrapper. (Great for grids.)

Markup: <input type="text">
<textarea></textarea>
<select>
    <option value="">Please Choose...</option>
</select>

Styleguide 5.1

*/

input,
textarea {

    // Variables
    @1px: 1em * (1 / @base-text-size);
    @2px: 1em * (2 / @base-text-size);
    @4px: 1em * (4 / @base-text-size);
    @600px: 1em * (600 / @base-text-size);
    @input-side-padding: 1em * (@input-padding / @base-text-size);

    // Create
    width: 100%;
    max-width: @600px;
    font-size: 1em;
    padding: @quarter-vertical @input-side-padding;
    background: @white;
    border: @1px solid @grey;
    outline: none;

    // Mixins
    .body-text();
    .border-radius(@2px);
    .box-shadow-inset(0, @1px, @2px, @light-grey);

    &:hover,
    &:focus,
    &:active,
    &.is-current {
        border-color: @light-black;
        z-index: 1;

        // Mixins
        
        .box-shadow(0, @1px, @4px, @light-grey);
    }
}
input {
    &[type="checkbox"],
    &[type="radio"] {
        width: auto;

        .lte7 {
            width: 13px;
        }
    }
}
textarea {
    height: @full-vertical * 4;
}
select {
    width: auto;
    max-width: 100%;
    font-size: 0.8125em;
}


/*

Useful Input Widths

Useful widths for form inputs, both fixed- and fluid-width.

Markup: <input type="text" class="{$modifiers}" placeholder="Sample placeholder text">

.input-xxxs - 
.input-xxs - 
.input-xs - 
.input-s - 
.input-m - 
.input-l - 
.gt-quarter.gd-quarter - Using the grid system for a 25% width
.gt-third.gd-third - Using the grid system for a 33% width
.gt-half.gd-half - Using the grid system for a 50% width

Styleguide 5.2

*/

.input-eighth {
    width: 12.5%;
}
.input-quarter {
    width: 25%;
}
.input-half {
    width: 50%;
}
.input-xxxs {
    width: 1em * ( 30 / @base-text-size);
}
.input-xxs {
    width: 1em * ( 50 / @base-text-size);
}
.input-xs {
    width: 1em * (100 / @base-text-size);
}
.input-s {
    width: 1em * (175 / @base-text-size);
}
.input-m {
    width: 1em * (250 / @base-text-size);
}
.input-l {
    width: 1em * (350 / @base-text-size);
    max-width: 100%;
}


/*
Input Label

Markup: <label class="input-label">
    Input Label
    <input class="input-l" type="email" placeholder="Ex: name@email.com">
</label>

Styleguide 5.3
*/

/*
Input Label with Hint

Markup: <label class="input-label">
    Input Label
    <input class="input-l" type="email" placeholder="Ex: name@email.com">
    <small class="hint">This is a hint.</small>
</label>

Styleguide 5.3.1
*/

.input-label {
    display: block;

    // Mixins
    .padding-leader(1);

    input,
    textarea,
    select {
    
        // Mixins
        .margin-vertical(0.25);
    }
    .hint {
        color: @grey;

        // Mixins
        .body-text();
        .margin-leader(0.25);
    }
}
.input-desc {

    /* Mixins */
    .source-sans-regular();
    .margin-leader(0);

    /* Display & Box Model */
    display: block;
}
.fieldset {

    /* Mixins */
    .margin-leader(1);
    .padding-trailer(1);
}
.checkbox-list {

    /* Mixins */
    .margin-leader(0.5);
}
legend + .checkbox-list {

    /* Mixins */
    .margin-leader(0);
}
legend {
    .input-label {

        /* Mixins */
        .padding-trailer(0.25);
    }

    + .input-desc {

        /* Variables */
        @5px: 1em * (5 / @base-text-size);

        /* Positioning */
        position: relative;
        top: -@5px;
    }
}
.search {
    .input {

        /* Mixins */
        .border-radius-right(0);

        /* Display & Box Model */
        float: left;
    }
    .submit {

        /* Mixins */
        .border-radius-left(0);

        /* Display & Box Model */
        margin: 0;
        float: left;
    }
}

/*
Form Validation

Markup: <label class="input-label {$modifiers}">
    Telephone
    <input class="input-s" type="tel" value="555-555-5555">
</label>

.error - 
.success - 

Styleguide 5.4
*/

.success {
    input,
    textarea,
    select {
        border-color: @success-color;
    }
}
.error {
    input,
    textarea,
    select {
        border-color: @error-color;
    }
}

/*
Form Messaging

Markup: <label class="input-label">
    Form Bubble
    <input type="tel" placeholder="XXX-XXX-XXXX">
    <small class="input-alert {$modifiers} bubble">
        A message pertaining to this field.
    </small>
</label>

.info - 
.warning - 
.error - 
.success - 

Styleguide 5.5
*/

.bubble {

    // Variables
    @1px: 1em * (1 / @base-text-size);
    @5px: 1em * (5 / @base-text-size);
    @7px: 1em * (7 / @base-text-size);

    @wisp-width: @5px;
    @bubble-color: @white;
    @shadow: fadeout(@black, 50%);
    @shadow-radius: @7px;

    // Create
    margin: 0;
    padding: @half-vertical;
    background-color: @bubble-color;
    position: relative;

    // Mixins
    .border-radius(@default-radius);
    .box-shadow(0, 0, @shadow-radius, @shadow);
    .transition(opacity, 0.15s, linear);

    &:after {
        position: absolute;
        border: @wisp-width solid transparent;
    
        // Mixins
        .pseudo-clear();
    }
    &.left-wisp,
    &.right-wisp {
        &:after {
            top: 50%;
            margin-top: -@wisp-width;
        }
    }
    &.left-wisp {
        &:after {
            left: -@wisp-width * 2;
            border-right-color: @bubble-color;
        }
    }
    &.right-wisp {
        &:after {
            right: -@wisp-width * 2;
            border-left-color: @bubble-color;
        }
    }
    &.top-wisp,
    &.bottom-wisp {
        &:after {
            left: 50%;
            margin-left: -@wisp-width;
        }
    }
    &.top-wisp {
        &:after {
            top: -@wisp-width * 2;
            border-bottom-color: @bubble-color;
        }
    }
    &.bottom-wisp {
        &:after {
            bottom: -@wisp-width * 2;
            border-top-color: @bubble-color;
        }
    }
    &.input-alert {
        padding: @quarter-vertical @half-vertical;
        color: @white;

        // Mixins
        .body-text();
        .box-shadow-none();
        .inline-block-fallback();
        
        &:after {
            left: @half-vertical;
            margin-left: 0;
            top: -@wisp-width * 2;
            border-bottom-color: @bubble-color;
        }
        &.warning {
            .input-alert-color(@warning-color);
        }
        &.info {
            .input-alert-color(@info-color);
        }
        &.error {
            .input-alert-color(@error-color);
        }
        &.success {
            .input-alert-color(@success-color);
        }
    }
}

.no-boxshadow {
    .bubble {

        // Variables
        @1px: 1em * (1 / @base-text-size);
    
        // Create
        border: @1px solid @grey;
    }
}
