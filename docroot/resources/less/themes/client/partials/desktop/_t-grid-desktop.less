/*
Desktop Responsive Grid

**Note:** On desktop viewports, this styleguide's layout is set to have a 25% sidebar and 75% main content area.

`.gd-` signifies "grid, desktop"

Markup:
<div class="gd-row">
    <div class="gd-columns gd-half">
        <div class="thin panel">Half</div>
    </div>
    <div class="gd-columns gd-half">
        <div class="thin panel">Half</div>
    </div>
</div>
<div class="gd-row">
    <div class="gd-columns gd-third">
        <div class="thin panel">Third</div>
    </div>
    <div class="gd-columns gd-third">
        <div class="thin panel">Third</div>
    </div>
    <div class="gd-columns gd-third">
        <div class="thin panel">Third</div>
    </div>
</div>
<div class="gd-row">
    <div class="gd-columns gd-third">
        <div class="thin panel">Third</div>
    </div>
    <div class="gd-columns gd-two-thirds">
        <div class="thin panel">Two Thirds</div>
    </div>
</div>
<div class="gd-row">
    <div class="gd-columns gd-quarter">
        <div class="thin panel">Quarter</div>
    </div>
    <div class="gd-columns gd-quarter">
        <div class="thin panel">Quarter</div>
    </div>
    <div class="gd-columns gd-quarter">
        <div class="thin panel">Quarter</div>
    </div>
    <div class="gd-columns gd-quarter">
        <div class="thin panel">Quarter</div>
    </div>
</div>

Styleguide 7.1.3
*/

.gd-row {
    #mixed > .row(@base-margin);

    &.gd-rtl    {
        .gd-columns {
            float:  right;
        }
    }
    &.gd-ltr    {
        .gd-columns {
            float:  left;
        }
    }
}
.gd-columns {
    #mixed > .grid-column();
    #mixed > .grid-padding(@base-margin);
}
.gd-1of12   {
    #mixed > .grid-width(1, 12);
}
.gd-2of12   {
    #mixed > .grid-width(2, 12);
}
.gd-3of12,
.gd-2of8,
.gd-quarter {

    // Use cases: .gd-3of12, .gd-2of8
    #mixed > .grid-width(3, 12);
}
.gd-4of12,
.gd-3of9,
.gd-2of6,
.gd-third   {
    #mixed > .grid-width(4, 12);
}
    // For 2of4: .gd-half
    
.gd-5of12   {
    #mixed > .grid-width(5, 12);
}
    .gd-2of10,
    .gd-1of5    {
        #mixed > .grid-width(1, 5);
    }
    .gd-4of10,
    .gd-2of5    {
        #mixed > .grid-width(2, 5);
    }
    .gd-6of10,
    .gd-3of5    {
        #mixed > .grid-width(3, 5);
    }
    .gd-8of10,
    .gd-4of5    {
        #mixed > .grid-width(4, 5);
    }
.gd-6of12,
.gd-3of6,
.gd-4of8,
.gd-5of10,
.gd-2of4,
.gd-half    {
    width:      50%;
}
    // For 2of6: .gd-third
    // For 3of6: .gd-half
    // For 4of6: .gd-two-thirds

.gd-7of12   {
    #mixed > .grid-width(7, 12);
}
    .gd-2of7    {
        #mixed > .grid-width(2, 7);
    }
    .gd-3of7    {
        #mixed > .grid-width(3, 7);
    }
    .gd-4of7    {
        #mixed > .grid-width(4, 7);
    }
    .gd-5of7    {
        #mixed > .grid-width(5, 7);
    }

.gd-8of12,
.gd-4of6,
.gd-6of9,
.gd-two-thirds  { 
    
    // .gd-8of12, .gd-4of6, .gd-6of9
    #mixed > .grid-width(8, 12);
}
    // For 2of8: .gd-quarter
    
    .gd-3of8    {
        #mixed > .grid-width(3, 8);
    }
    
    // For 4of8: .gd-half
    
    .gd-5of8    {
        #mixed > .grid-width(5, 8);
    }
    
    // For 6of8: .gd-three-quarters

.gd-6of8,
.gd-9of12,
.gd-three-quarters  {
    
    // .gd-6of8, .gd-9of12
    #mixed > .grid-width(9, 12);
}

    .gd-2of9    {
        #mixed > .grid-width(2, 9);
    }

    // For 3of9: .gd-third

    .gd-5of9    {
        #mixed > .grid-width(5, 9);
    }

    // For 6of9: .gd-two-thirds

    .gd-7of9    {
        #mixed > .grid-width(7, 9);
    }

.gd-10of12  {
    #mixed > .grid-width(10, 12);
}

    // For 2of10: .gd-1of5

    .gd-3of10   {
        #mixed > .grid-width(3, 10);
    }
    
    // For 4of10: .gd-2of5
    // For 5of10: .gd-half
    // For 6of10: .gd-3of5

    .gd-7of10   {
        #mixed > .grid-width(7, 10);
    }

    // For 8of10: .gd-4of5

.gd-11of12  {
    #mixed > .grid-width(11, 12);
}
    .gd-2of11   {
        #mixed > .grid-width(2, 11);
    }
    .gd-9of11   {
        #mixed > .grid-width(9, 11);
    }
.gd-full    {
    width:      100%;
}
.gd-clear {
    clear:      both;
}
